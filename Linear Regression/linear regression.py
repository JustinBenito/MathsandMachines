# -*- coding: utf-8 -*-
"""Mathematical Machine learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kzwvu7ViNSlgY3Uzp___yEl4TUj30Hm1
"""

import pandas as pd
import matplotlib.pyplot as plt

df=pd.read_csv('Salary_dataset.csv')

def loss_fn(m,b,points):
  error=0
  for i in range(len(points)):
    x=points.iloc[i].YearsExperience
    y=points.iloc[i].Salary
    error+=(y-(mx+b))**2
  tot_err=error/float(len(points))

def gradient_descent(m,b,points,learn):
  mgrad=0
  bgrad=0
  n=len(points)
  for i in range(n):
    x=points.iloc[i].YearsExperience
    y=points.iloc[i].Salary
    mgrad+=-(2/n)*x*(y-(m*x+b))
    bgrad+=-(2/n)*(y-(m*x+b))
  new_m=m-learn*mgrad
  new_b=b-learn*mgrad
  return new_m,new_b

m=0
b=0
l=0.001
epochs=1000

for i in range(epochs):
  if(i%50==0):
    print(f"Epoch: {i}")
  m,b=gradient_descent(m,b,df,l)
print(m,b)

plt.scatter(df.YearsExperience,df.Salary,color="black")
plt.plot(list(range(0,11)),[m*x+b for x in range(0,11)],color="red")
plt.show()

